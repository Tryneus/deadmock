.mock-grid-cell-value {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.2em;
}

.mock-grid-values-cell-value {
    display: flex;
    justify-content: center;
    margin-right: 0.7em;
    flex-grow: 0;
    flex-shrink: 0;
    gap: 0.2em;
}

.mock-grid-values-cell-item-delete {
    margin-left: 0.1em;
    visibility: hidden;
}

.mock-grid-values-cell-item {
    display: flex;
    align-items: center;
    flex: 1 50%;
    overflow: hidden;
    white-space: nowrap;

    .mock-deleteable > .mock-editable-text {
        overflow: hidden;
        text-overflow: ellipsis;
    }

    &:hover .mock-grid-values-cell-item-delete {
        visibility: visible;
    }
}

.mock-grid-cell-position {
    position: relative;
    height: 0;
}

.mock-grid-cell-hover-buttons {
    z-index: 5;
    visibility: hidden;
    line-height: 1;
    position: absolute;
    left: 0.1rem;
    top: 0.1rem;
    padding: 0.1rem;
    border-radius: 0.4rem;
    border: 0.1rem solid rgb(10 10 10 / 50%);
    background-color: rgb(40 40 40 / 80%);
    display: inline-flex;
    flex-direction: column;
    gap: 0.2rem;
    font-size: 0.7rem;

    .mock-tooltip {
        visibility: visible;
    }
}

.mock-grid-cell:has(.mock-spirit-scaling) .mock-grid-cell-hover-buttons {
    left: 0;
    top: 0;
}

.mock-grid-cell {
    box-sizing: border-box;
    flex: 1 0 30%;
    display: flex;
    flex-direction: column;

    &:hover .mock-grid-cell-hover-buttons {
        visibility: visible;
    }
}

.mock-grid-cell-contents {
    display: flex;
    flex-direction: column;
    place-content: center;
    text-align: center;
    border-radius: inherit;
    flex-grow: 1;
}

.mock-grid-values-cell {
    display: flex;
    flex-flow: row wrap;
    flex-basis: 100%;

    &:nth-child(2) {
        flex-flow: column nowrap;
        flex-basis: calc(50% - 0.2rem);
    }
}

.mock-grid {
    margin-top: 0.2rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.2rem;

    --border-radius: 0.5rem;
    
    /* A bunch of bullshit to get border radii on the correct divs - we would
     * set the border on the grid and overflow: hidden, but we need
     * spirit-scaling to be able to render outside the grid's bounding-box */
    > *:first-child {
        border-top-left-radius: var(--border-radius);
    }

    > *:last-child {
        border-bottom-right-radius: var(--border-radius);
    }

    &:not(:has(> *:nth-child(3))) {
        > *:last-child {
            border-top-right-radius: var(--border-radius);
        }
    }

    &:has(> *:nth-child(6)) {
        > *:nth-child(3) {
            border-top-right-radius: var(--border-radius);
        }
    }

    &:has(.mock-grid-values-cell) {
        > *:nth-child(2):nth-last-child(2),
        > *:nth-child(3):nth-last-child(2),
        > *:nth-child(2):nth-last-child(4) {
            border-top-right-radius: var(--border-radius);
        }

        &:not(:has(> *:nth-child(3))) {
            > *:first-child {
                border-bottom-left-radius: var(--border-radius);
            }
        }

        &:has(> *:nth-child(3)) {
            > *:last-child {
                border-bottom-left-radius: var(--border-radius);
            }
        }

        &:has(> *:nth-child(3n+5):last-child) {
            > *:nth-last-child(-n+5):not(.mock-grid-values-cell) {
                flex-basis: 40%;
            }
        }
    }

    &:not(:has(.mock-grid-values-cell)) {
        > *:nth-child(3):last-child,
        > *:nth-child(2):nth-last-child(3),
        > *:nth-child(3):nth-last-child(3) {
            border-top-right-radius: var(--border-radius);
        }

        &:not(:has(> *:nth-child(4))) {
            > *:first-child {
                border-bottom-left-radius: var(--border-radius);
            }
        }

        > *:nth-child(3n):nth-last-child(2),
        > *:nth-child(3n+4):nth-last-child(2),
        > *:nth-child(3n+4):nth-last-child(3) {
            border-bottom-left-radius: var(--border-radius);
        }

        &:has(> *:nth-child(3n+4):last-child) {
            > *:nth-last-child(-n+4) {
                flex-basis: 40%;
            }
        }
    }
}
